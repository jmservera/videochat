{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageSku": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_LRS",
                "Standard_ZRS"
            ],
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of replication to use for the storage account."
            }
        },
        "turnAdmin": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "Administrator username for the turn server."
            }
        },
        "turnAdminPassword": {
            "type": "securestring",
            "defaultValue": "ThisIsThe4dminP$$",
            "minLength": 8,
            "metadata": {
                "description": "Administrator password for the turn server."
            }
        },
        "turnServerName": {
            "type": "string",
            "defaultValue": "turnSrv",
            "metadata": {
                "description": "The base name of the turn server"
            }
        },
        "turnServerRealm": {
            "type": "string",
            "defaultValue": "myrealm.com",
            "metadata": {
                "description": "The default realm to be used for the users."
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "minLength": 8,
            "defaultValue": "ThisIsThe4dminP$$",
            "metadata": {
                "description": "Administrator password for the turn server virtual machine"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "defaultValue": "adminUsername",
            "metadata": {
                "description": "Username for the turn server virtual machine"
            }
        }
    },
    "functions": [
    ],
    "variables": {
        "serverName": "[substring(concat(parameters('turnServerName'),uniqueString(resourceGroup().id)),0,15)]"
    },
    "resources": [
        {
            "name": "[toLower(variables('serverName'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Turn Server Storage Account"
            },
            "sku": {
                "name": "[parameters('storageSku')]"
            },
            "kind": "Storage"
        },
        {
            "name": "[concat(variables('serverName'),'-PublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('serverName'))]"
                }
            }
        },
        {
            "name": "[concat(variables('serverName'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('serverName'),'-VirtualNetwork')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('serverName'),'-nsg'))]"
            ],
            "tags": {
                "displayName": "[concat(variables('serverName'),'-VirtualNetwork')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat(variables('serverName'),'-VirtualNetwork-Subnet')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('serverName'),'-nsg'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('serverName'),'-NetworkInterface')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('serverName'),'-PublicIP'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('serverName'),'-VirtualNetwork'))]"
            ],
            "tags": {
                "displayName": "[concat(variables('serverName'),'-NetworkInterface')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('serverName'),'-PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(variables('serverName'),'-VirtualNetwork'), concat(variables('serverName'),'-VirtualNetwork-Subnet'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('serverName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serverName'),'-NetworkInterface'))]"
            ],
            "tags": {
                "displayName": "[variables('serverName')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('serverName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('serverName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serverName'),'-NetworkInterface'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', toLower(variables('serverName')))).primaryEndpoints.blob]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('serverName'),'/installcustomscript')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript1 for Linux VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('serverName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/jmservera/videochat/turnserver/turnserver/scripts/installturn.sh"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('sh installturn.sh ',parameters('turnAdmin'),' ',parameters('turnAdminPassword'),' ',parameters('turnServerRealm'))]"
                }
            }
        }
    ],
    "outputs": {
    }
}